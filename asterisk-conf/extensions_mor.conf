
[mor]

exten => s,1,NoOp(s extension reached!)
; Get number from To
exten => s,2,Set(SEXT=${CUT(CUT(SIP_HEADER(To),@,1),:,2)})
exten => s,3,NoOp(SIP_HEADER TO field: ${SEXT})
exten => s,4,GotoIf($["${SEXT}" = "s"]?6)
exten => s,5,GotoIf($[${LEN(${SEXT})} > 0]?${SEXT},1)
; Get number from Diversion
exten => s,6,Set(SEXT=${CUT(CUT(SIP_HEADER(Diversion),@,1),:,2)})
exten => s,7,NoOp(SIP_HEADER Diversion field: ${SEXT})
exten => s,8,GotoIf($["${SEXT}" = "s"]?10)
exten => s,9,GotoIf($[${LEN(${SEXT})} > 0]?${SEXT},1)
; Number not found, sorry, bye
exten => s,10,Wait(1)
exten => s,11,Playback(tt-somethingwrong)
exten => s,12,Congestion(10)
exten => s,13,Hangup



exten => _+.,1,Goto(${EXTEN:1},1)

exten => fax, 1, Goto(mor_fax2email,${EXTEN},1)

exten => _X.,1,NoOp(MOR starts)
exten => _X.,2,GotoIf($["${CHANNEL(channeltype)}" = "SIP"]?3:5)
exten => _X.,3,GotoIf($[${LEN(${SIP_HEADER(Diversion)})} > 0]?4:5)
exten => _X.,4,SIPAddHeader(Diversion: ${SIP_HEADER(Diversion)})
exten => _X.,5,Set(TIMEOUT(response)=20)
exten => _X.,6,Set(TIMEOUT(digit)=10)
exten => _X.,7,mor(${EXTEN})
exten => _X.,8,GotoIf($["${MOR_CARD_USED}" != ""]?mor_callingcard,s,1)
exten => _X.,9,GotoIf($["${MOR_ANIPIN_USED}" != ""]?mor_anipin,s,1)
exten => _X.,10,GotoIf($["${DIALSTATUS}" = "BUSY"]?BUSY,1:HANGUP,1)

exten => BUSY,1,GotoIf($[${LEN(${MOR_CB_BUSY_IVR})} > 0]?2:5)
exten => BUSY,2,Set(MOR_TMP_VAR=${MOR_CB_BUSY_IVR})
exten => BUSY,3,Set(MOR_CB_BUSY_IVR=)
exten => BUSY,4,Goto(ivr_block${MOR_TMP_VAR},s,1)
exten => BUSY,5,Busy(10)
exten => BUSY,6,Hangup

exten => HANGUP,1,GotoIf($[${LEN(${MOR_CB_FAILED_IVR})} > 0]?2:5)
exten => HANGUP,2,Set(MOR_TMP_VAR=${MOR_CB_FAILED_IVR})
exten => HANGUP,3,Set(MOR_CB_FAILED_IVR=)
exten => HANGUP,4,Goto(ivr_block${MOR_TMP_VAR},s,1)
exten => HANGUP,5,Hangup(${MOR_HGC})

exten => FAILED,1,Goto(HANGUP,1)
exten => HANGUP_NOW,1,goto(HANGUP,1)


;Asterisk 1.4.24.1+ support
exten => h,1,Set(MOR_DIALSTATUS=${DIALSTATUS})
exten => h,2,Set(MOR_RDURATION=${CDR(rduration)})
exten => h,3,Set(MOR_RBILLSEC=${CDR(rbillsec)})
exten => h,4,Set(MOR_CLID=${CALLERID(all)})
exten => h,5,Set(MOR_CHANNEL=${CDR(channel)})
exten => h,6,NoOp(HANGUP CAUSE: ${HANGUPCAUSE})


switch => Realtime/mor@realtime_ext

include => mor_tests




[mor_local]

exten => _+.,1,Goto(${EXTEN:1},1)

exten => fax, 1, Goto(mor_fax2email,${EXTEN},1)
switch => Realtime/mor_local@realtime_ext



[mor_voicemail]

exten => _.,1,VoiceMail(${EXTEN},${MOR_VM})
exten => _.,n,Hangup




[macro-mor_answer]
exten => s,1,AGI(mor_answer_mark)




[mor_main]
exten => .,1,Goto(mor,${EXTEN},1)



[please_login]
exten => _X.,1,Goto(mor_local,${EXTEN},1)


;WEB Callback

[mor_cb_src]

exten => _X.,1,NoOp(MOR CB calls src!)
exten => _X.,2,Set(__MOR_API_CB_ID=${MOR_CB_ID})
exten => _X.,3,Set(__MOR_API_CB_SRC=1)
exten => _X.,4,Set(__MOR_CB_LEGA_CID=${MOR_CB_LEGA_CID})
exten => _X.,5,Set(CDR(ACCOUNTCODE)=${MOR_ACC})
exten => _X.,6,Set(__MOR_CALL_LEG1=1)
exten => _X.,7,Dial(Local/${EXTEN}@mor_local/n)
exten => _X.,8,Hangup



[mor_cb_dst]

exten => _X.,1,NoOp(MOR CB calls dst!)
exten => _X.,2,Set(__MOR_API_CB_ID=${MOR_CB_ID})
exten => _X.,3,Set(__MOR_API_CB=1)
exten => _X.,4,Set(__MOR_API_CB_DST=1)
exten => _X.,5,Set(__MOR_CB_LEGA_DST=${MOR_CB_LEGA_DST})
exten => _X.,6,Set(__MOR_CB_LEGB_CID=${MOR_CB_LEGB_CID})
exten => _X.,7,NoOp(Acc: ${CDR(ACCOUNTCODE)})
exten => _X.,8,Wait(1)
exten => _X.,9,GotoIf($[${LEN(${MOR_C2C_CAMPAIGN_ID})} > 0]?10:12)
exten => _X.,10,Playback(mor/c2c_greetings/${MOR_C2C_CAMPAIGN_ID})
exten => _X.,11,Goto(13)
exten => _X.,12,Playback(mor/mor_pls_wait_connect_call)
exten => _X.,13,Dial(Local/${EXTEN}@mor_local/n)
exten => _X.,14,Hangup


[mor_cb_dst_ask]

exten => _X.,1,NoOp(MOR CB asks for dst!)
exten => _X.,2,Set(__MOR_API_CB_ID=${MOR_CB_ID})
exten => _X.,3,Set(__MOR_API_CB=1)
exten => _X.,4,Set(__MOR_API_CB_DST=1)
exten => _X.,5,Set(__MOR_CB_LEGA_DST=${MOR_CB_LEGA_DST})
exten => _X.,6,Set(__MOR_CB_LEGB_CID=${MOR_CB_LEGB_CID})
exten => _X.,7,NoOp(Acc: ${CDR(ACCOUNTCODE)})
exten => _X.,8,Wait(1)
exten => _X.,9,Read(number,mor/mor_pls_entr_num_uwish2_call)
exten => _X.,10,Wait(1)
exten => _X.,11,Playback(mor/mor_pls_wait_connect_call)
exten => _X.,12,Dial(Local/${number}@mor_local/n)
exten => _X.,13,Hangup


; Spying on channels
[mor_cb_spy]
exten => _.,1,NoOp(Spying on ${EXTEN})
exten => _.,n,Chanspy(${EXTEN},q)
exten => _.,n,Hangup


;Simple Callback


[mor_activate_callback]

exten => _+.,1,Goto(${EXTEN:1},1)

exten => _X.,1,NoOp
exten => _X.,2,Wait(1)  ;change to 6 if no CID is received
exten => _X.,3,AGI(mor_callback)
exten => _X.,4,Hangup(${MOR_HGC})


[mor_fax2email]

exten => _X.,1,Answer
exten => _X.,2,StopPlaytones
exten => _X.,3,Playback(beep)
exten => _X.,4,Set(FAXFILE=${CDR(UNIQUEID)})
exten => _X.,5,RxFax(/var/spool/asterisk/faxes/${FAXFILE}.tif)

exten => fax,1,Goto(mor_fax2email,111,1)

exten => h,1,DeadAGI(mor_fax2email)
exten => h,2,Hangup


[mor_direct]

exten => _+.,1,Goto(${EXTEN:1},1)

exten => _X.,1,NoOp(mor_direct)

exten => _X.,n,Set(TRUNKEXT=${SIP_HEADER(x-MOR-TrunkExtension)})
exten => _X.,n,GotoIf($[${LEN(${TRUNKEXT})} > 0]?normal:calleridcheck)
exten => _X.,n(trunk),NoOp(TRUNK Extension: ${TRUNKEXT})
exten => _X.,n,Set(MOR_DID=${TRUNKEXT})

exten => _X.,n(calleridcheck),Set(MORCALLERID=${SIP_HEADER(x-MOR-CallerID)})
exten => _X.,n,GotoIf($[${LEN(${MORCALLERID})} > 0]?callerid:normal)
exten => _X.,n(callerid),NoOp(CallerID from SIP Header: ${MORCALLERID})
exten => _X.,n,Set(CALLERID(all)=${MORCALLERID})

exten => _X.,n(normal),Goto(mor_local,${EXTEN},1)


[mor_proxy]

exten => _+.,1,Goto(${EXTEN:1},1)

exten => _X.,1,NoOp(SIP Proxy calling)
exten => _X.,2,Set(MORPROXYCALLERID=${SIP_HEADER(x-MOR-Original-CallerID)})
exten => _X.,3,GotoIf($[${LEN(${MORPROXYCALLERID})} > 0]?4:6)
exten => _X.,4,NoOp(CallerID from SIP Header: ${MORPROXYCALLERID})
exten => _X.,5,Set(CALLERID(all)=${MORPROXYCALLERID})
exten => _X.,6,Goto(mor,${EXTEN},1)



;include => mor_local


#include extensions_mor_ad.conf
#include extensions_mor_tests.conf
#include extensions_mor_pbxfunctions.conf
#include extensions_mor_ivr.conf
#include extensions_mor_custom.conf
#include extensions_mor_callingcard.conf
#include extensions_mor_stresstest.conf
#include extensions_mor_anipin.conf
#include extensions_mor_h323.conf
#include extensions_mor_didww.conf

