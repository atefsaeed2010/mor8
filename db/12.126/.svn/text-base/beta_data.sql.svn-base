# removing the mark that DB is updated from script
DELETE FROM conflines WHERE name = 'DB_Update_From_Script';

# DATA
UPDATE extlines SET app = 'NoOp' WHERE context = 'mor' AND app = 'Congestion';
INSERT IGNORE INTO conflines(name, value, owner_id) SELECT 'Invoice_page_limit', '20', '0' FROM DUAL WHERE (SELECT COUNT(*) FROM conflines WHERE name = 'Invoice_page_limit' AND owner_id = 0) = 0; 
INSERT IGNORE INTO conflines(name, value, owner_id) SELECT 'Prepaid_Invoice_page_limit', '20', '0' FROM DUAL WHERE (SELECT COUNT(*) FROM conflines WHERE name = 'Prepaid_Invoice_page_limit' AND owner_id = 0) = 0;
#move main extensions from DB to .conf
UPDATE extlines SET exten='disabled_X.' WHERE context = 'mor' AND exten = '_X.';
DELETE FROM extlines WHERE context = 'mor' AND exten IN ('HANGUP_NOW', 'HANGUP','FAILED','BUSY');
update emails set body =  0x596f7572206465766963652073657474696e67733a200d0a0d0a5365727665722049503a203c253d207365727665725f697020253e0d0a44657669636520747970653a203c253d206465766963655f7479706520253e0d0a557365726e616d653a203c253d206465766963655f757365726e616d6520253e0d0a50617373776f72643a203c253d206465766963655f70617373776f726420253e0d0a0d0a2d2d2d2d0d0a0d0a53657474696e677320746f206c6f67696e20746f204d4f5220696e746572666163653a0d0a0d0a4c6f67696e2055524c3a203c253d206c6f67696e5f75726c20253e0d0a557365726e616d653a203c253d206c6f67696e5f757365726e616d6520253e0d0a50617373776f72643a203c253d206c6f67696e5f70617373776f726420253e0d0a0d0a5468616e6b20796f7520666f72207265676973746572696e6721 where body = 0x596f75206465766963652073657474696e67733a200d0a0d0a5365727665722049503a203c253d207365727665725f697020253e0d0a44657669636520747970653a203c253d206465766963655f7479706520253e0d0a557365726e616d653a203c253d206465766963655f757365726e616d6520253e0d0a50617373776f72643a203c253d206465766963655f70617373776f726420253e0d0a0d0a2d2d2d2d0d0a0d0a53657474696e677320746f206c6f67696e20746f204d4f5220696e746572666163653a0d0a0d0a4c6f67696e2055524c3a203c253d206c6f67696e5f75726c20253e0d0a557365726e616d653a203c253d206c6f67696e5f757365726e616d6520253e0d0a50617373776f72643a203c253d206c6f67696e5f70617373776f726420253e0d0a0d0a5468616e6b20796f7520666f72207265676973746572696e6721;
INSERT IGNORE INTO `pbxfunctions` (id, name, context, extension, priority, pf_type, user_id, allow_resellers) SELECT 9, 'ringgroupID', 'ringgroupID', 's', '1', 'ringgroupID', 0, 0 FROM dual WHERE (SELECT COUNT(*) FROM pbxfunctions WHERE name = 'ringgroupID') = 0;
UPDATE hangupcausecodes SET description = '<b>218 - Reseller does not allow loss calls</b><br>This happens when reseller sets lower price for his user compared to the price he buys from system owner and user is not allowed to make loss calls.<br>System saves reseller from getting loss. Set higher rate or allow loss calls for resellers user to fix this problem.<br>For more information please consult online manual at wiki.kolmisoft.com<br>' WHERE code = '218';
update conflines set value="" where name = 'WebMoney_Purse' and value = "Z616776332783";
INSERT IGNORE INTO translations (name, native_name, short_name, position, active, flag) SELECT 'Česká republika', '', 'cz', 32, 0, 'cze' FROM dual WHERE (SELECT COUNT(*) FROM translations where flag = 'cze') = 0;
INSERT IGNORE INTO user_translations (user_id, translation_id, position, active) SELECT 0, translations.id, translations.position, translations.active FROM translations WHERE (SELECT COUNT(*) FROM user_translations where translation_id = (select id from translations where flag = 'cze')) = 0 and flag = 'cze';
UPDATE conflines SET value = 'MOR 11' WHERE name = 'Version' AND value = 'MOR 10';
INSERT IGNORE INTO acc_rights (name, nice_name, permission_group, right_type) SELECT 'monitorings', 'Monitorings', 'Plugins', 'reseller' FROM dual WHERE (SELECT COUNT(*) FROM acc_rights WHERE name= 'monitorings' AND permission_group = 'Plugins' AND right_type = 'reseller') = 0;
UPDATE devices set description = CONCAT(description, ' ', 'DO NOT EDIT') WHERE name like 'mor_server_%' AND description not like '%DO NOT EDIT%';
UPDATE conflines set value = '' WHERE name = 'Last_Crash_Exception_Class';
INSERT IGNORE INTO voicemail_boxes (device_id, mailbox, password, fullname, context, email, pager, dialout, callback) SELECT devices.id AS device_id, devices.extension AS mailbox, (SELECT value FROM   conflines WHERE  name = 'Default_device_voicemail_box_password' AND owner_id = users.owner_id) AS password, CONCAT(users.first_name, ' ', users.last_name) AS full_name, 'default' AS context, IF(LENGTH(addresses.email) > 0, addresses.email, (SELECT value FROM   conflines  WHERE  name = 'Default_device_voicemail_box_email' AND owner_id = users.owner_id)) AS email,'' AS pager, '' AS dialout, '' AS callback FROM devices LEFT JOIN users ON users.id = devices.user_id LEFT JOIN addresses ON users.address_id = addresses.id LEFT JOIN voicemail_boxes ON devices.id = voicemail_boxes.device_id WHERE devices.user_id != -1 AND voicemail_boxes.uniqueid IS NULL;
INSERT INTO pbxfunctions (name, pf_type, context, extension, priority) SELECT 'Card TopUp',  'card_topup', 'mor_pbxfunctions', 'card_topup', 1 FROM dual WHERE (SELECT COUNT(*) FROM pbxfunctions WHERE name = 'Card TopUp') = 0;
INSERT IGNORE INTO currencies (name, full_name, active) SELECT 'MDL', 'Moldovan leu', 0 FROM dual WHERE NOT EXISTS (SELECT * FROM currencies WHERE name = 'MDL');
UPDATE devices SET istrunk = 1 WHERE id IN (SELECT device_id FROM providers);
UPDATE conflines SET value = " by <a href='http://www.kolmisoft.com' target=\"_blank\">Kolmisoft </a> 2006-2012" WHERE value = " by <a href='http://www.kolmisoft.com' target=\"_blank\">Kolmisoft </a> 2006-2012" AND name = 'Copyright_Title';
UPDATE translations SET name = 'Czech' WHERE short_name = 'cz';
INSERT IGNORE INTO translations (name, native_name, short_name, position, active, flag) SELECT 'Hebrew', 'Ivrit', 'he', '110', '1', 'isr' FROM dual WHERE NOT EXISTS (SELECT * FROM translations WHERE name = 'Hebrew');
UPDATE translations SET name = 'Czech' WHERE short_name = 'cz';
INSERT IGNORE INTO translations (name, native_name, short_name, position, active, flag) SELECT 'Hebrew', 'Ivrit', 'he', '110', '1', 'isr' FROM dual WHERE NOT EXISTS (SELECT * FROM translations WHERE name = 'Hebrew');
INSERT IGNORE INTO user_translations (user_id, translation_id, position, active) SELECT 0, (SELECT id FROM translations WHERE name = 'Hebrew'), 100,1 FROM dual WHERE NOT EXISTS (SELECT * FROM user_translations WHERE user_id = 0 AND translation_id = ((SELECT id FROM translations WHERE name = 'Hebrew')));
UPDATE flatrate_data SET seconds = minutes * 60 + seconds, minutes = 0;
UPDATE conflines SET value = ' by <a href=\'http://www.kolmisoft.com\' target=\"_blank\">KolmiSoft </a> 2006-2012' WHERE value = ' by <a href=\'http://www.kolmisoft.com\' target=\"_blank\">KolmiSoft </a> 2006-2008' AND name = 'Copyright_Title';
# change versiona nd admin browser title
UPDATE conflines SET value = ( CASE WHEN EXISTS (SELECT * FROM (SELECT * FROM conflines) AS ext WHERE ext.name = "MOR_11_extend" AND ext.value = "1") THEN "MOR 12" ELSE "MOR 11" END) WHERE value IN ('MOR 10', 'MOR 9', 'MOR 0.8', 'MOR 11', 'MOR 12') AND name IN ('Version', 'Admin_browser_Title');
#
INSERT IGNORE INTO directions (name, code) SELECT 'South Sudan','SSD' FROM dual WHERE NOT EXISTS (SELECT * FROM directions WHERE code='SSD');
INSERT IGNORE INTO destinationgroups (name, desttype, flag) SELECT 'South Sudan','FIX','ssd' FROM dual WHERE NOT EXISTS (SELECT * FROM destinationgroups WHERE flag='ssd');
INSERT IGNORE INTO destinations (prefix, direction_code, subcode, name, city, state, lata, tier, ocn, destinationgroup_id) SELECT '211','SSD','FIX','South Sudan',NULL,NULL,NULL,NULL,NULL,(SELECT id FROM destinationgroups WHERE flag='ssd') FROM dual WHERE NOT EXISTS (SELECT * FROM destinations WHERE prefix='211' AND direction_code='SSD');
INSERT IGNORE INTO destinations (prefix, direction_code, subcode, name, city, state, lata, tier, ocn, destinationgroup_id) SELECT '211811','SSD','FIX','South Sudan-Juba',NULL,NULL,NULL,NULL,NULL,(SELECT id FROM destinationgroups WHERE flag='ssd') FROM dual WHERE NOT EXISTS (SELECT * FROM destinations WHERE prefix='211811' AND direction_code='SSD');
update devicetypes set name = 'dahdi', ast_name = 'dahdi' where name = 'ZAP';
update devices set device_type = 'dahdi' where device_type = 'ZAP';
update providers set tech = 'dahdi' where tech = 'ZAP';
update conflines set name = 'Change_dahdi_to' where name = 'Change_Zap_to';
update conflines set name = 'Change_dahdi' where name = 'Change_Zap';
update conflines set name = 'Resellers_Allow_Use_dahdi_Device' where name = 'Resellers_Allow_Use_Zap_Device';
update providertypes set name = 'dahdi', ast_name = 'dahdi' where name = 'Zap';
update extlines set appdata = REPLACE(appdata, 'Zap', 'dahdi');
UPDATE users SET uniquehash = SUBSTRING(SHA1(RAND()) FROM 1 FOR 10) where uniquehash = 'mbqvm8gkrk';
INSERT IGNORE INTO destinationgroups (name, desttype, flag) SELECT 'South Sudan','MOB','ssd' FROM dual WHERE NOT EXISTS (SELECT * FROM destinationgroups WHERE flag='ssd' AND desttype='MOB');
INSERT IGNORE INTO destinations (prefix, direction_code, subcode, name, city, state, lata, tier, ocn, destinationgroup_id) SELECT '21197','SSD','MOB','South Sudan Mobile Gemtel',NULL,NULL,NULL,NULL,NULL,(SELECT id FROM destinationgroups WHERE flag='ssd' AND desttype='MOB') FROM dual WHERE NOT EXISTS (SELECT * FROM destinations WHERE prefix='21197' AND direction_code='SSD');
INSERT IGNORE INTO destinations (prefix, direction_code, subcode, name, city, state, lata, tier, ocn, destinationgroup_id) SELECT '21192','SSD','MOB','South Sudan Mobile Mtn',NULL,NULL,NULL,NULL,NULL,(SELECT id FROM destinationgroups WHERE flag='ssd' AND desttype='MOB') FROM dual WHERE NOT EXISTS (SELECT * FROM destinations WHERE prefix='21192' AND direction_code='SSD');
INSERT IGNORE INTO destinations (prefix, direction_code, subcode, name, city, state, lata, tier, ocn, destinationgroup_id) SELECT '21199','SSD','MOB','South Sudan Mobile Mtn',NULL,NULL,NULL,NULL,NULL,(SELECT id FROM destinationgroups WHERE flag='ssd' AND desttype='MOB') FROM dual WHERE NOT EXISTS (SELECT * FROM destinations WHERE prefix='21199' AND direction_code='SSD');
INSERT IGNORE INTO destinations (prefix, direction_code, subcode, name, city, state, lata, tier, ocn, destinationgroup_id) SELECT '21111','SSD','MOB','South Sudan Mobile Southtel',NULL,NULL,NULL,NULL,NULL,(SELECT id FROM destinationgroups WHERE flag='ssd' AND desttype='MOB') FROM dual WHERE NOT EXISTS (SELECT * FROM destinations WHERE prefix='21111' AND direction_code='SSD');
INSERT IGNORE INTO destinations (prefix, direction_code, subcode, name, city, state, lata, tier, ocn, destinationgroup_id) SELECT '21195','SSD','MOB','South Sudan Mobile Vivacell',NULL,NULL,NULL,NULL,NULL,(SELECT id FROM destinationgroups WHERE flag='ssd' AND desttype='MOB') FROM dual WHERE NOT EXISTS (SELECT * FROM destinations WHERE prefix='21195' AND direction_code='SSD');
INSERT IGNORE INTO destinations (prefix, direction_code, subcode, name, city, state, lata, tier, ocn, destinationgroup_id) SELECT '21191','SSD','MOB','South Sudan Mobile Zain',NULL,NULL,NULL,NULL,NULL,(SELECT id FROM destinationgroups WHERE flag='ssd' AND desttype='MOB') FROM dual WHERE NOT EXISTS (SELECT * FROM destinations WHERE prefix='21191' AND direction_code='SSD');
INSERT INTO hangupcausecodes (code, description) SELECT 227, '<b>227 - Calling Card PIN is not entered</b><br />User did not entered Calling Card PIN or (NUMBER + PIN)<br />' FROM dual WHERE NOT EXISTS (SELECT * FROM hangupcausecodes WHERE code = 227);
INSERT INTO hangupcausecodes (code, description) SELECT 228, '<b>228 - Calling Card Destination is not entered</b><br />User did not entered Calling Card Destination<br />' FROM dual WHERE NOT EXISTS (SELECT * FROM hangupcausecodes WHERE code = 228);
INSERT INTO hangupcausecodes (code, description) SELECT 229, '<b>229 - DID is reserved</b><br />DID is reserved to some User but not assigned to any Device.<br/ >Assign the DID to some Device or Dial Plan to route the call correctly<br />' FROM dual WHERE NOT EXISTS (SELECT * FROM hangupcausecodes WHERE code = 229);
INSERT INTO hangupcausecodes (code, description) SELECT 232, '<b>232 - Callback DID not available</b><br />Callback does not know to which DID connect the call.<br />Check Callback configuration in Dial Plans menu.<br />' FROM dual WHERE NOT EXISTS (SELECT * FROM hangupcausecodes WHERE code = 232);
INSERT INTO hangupcausecodes (code, description) SELECT 233, '<b>233 - Skype Addon Disabled</b><br />Skype Addon is not available<br />' FROM dual WHERE NOT EXISTS (SELECT * FROM hangupcausecodes WHERE code = 233);
INSERT INTO hangupcausecodes (code, description) SELECT 234, '<b>234 - Internal Loop</b><br />You have misconfiguration which creates internal loop<br />' FROM dual WHERE NOT EXISTS (SELECT * FROM hangupcausecodes WHERE code = 234);
INSERT INTO hangupcausecodes (code, description) SELECT 235, '<b>235 - Providers rate higher by percent</b><br />Provider is skipped, because LCR by price is used and percent is applied to first Provider<br />' FROM dual WHERE NOT EXISTS (SELECT * FROM hangupcausecodes WHERE code = 235);
INSERT INTO hangupcausecodes (code, description) SELECT 236, '<b>236 Callback initiation too early</b><br />Callback initiation denied because it is too early from the initiation call from same CallerID.<br /> E.g. First call is made from same CallerID and all other attempts to initiate callback are denied if they are too early. <br /> It is not allowed to initiate more callback attempts from same CallerID in the time period, which is necessary to wait after Callback Initiation Call and Call Leg A. This period is set in Callback Dial-Plan Edit window (Wait (s)).<br /> Such callback initiation control is implemented due to the case when providers send several INVITE packets for the same call.<br />Using this protection, only first INVITE will initiate the callback. All other attempts will be dropped with such HGC: 236<br />If you see such HGC near your call - also check for the good call, which should be made for first INVITE.<br />And you can ignore all these following call attempts or you can contact your DID Provider by asking to fix they call sending routines to avoid several INVITES.<br />By our experience DID Providers do not care to do that<br />' FROM dual WHERE NOT EXISTS (SELECT * FROM hangupcausecodes WHERE code = 236);
INSERT INTO hangupcausecodes (code, description) SELECT 237, '<b>237 - DID User is blocked</b><br />Call fails, because DID User is blocked and DID cannot be used for blocked Users<br />' FROM dual WHERE NOT EXISTS (SELECT * FROM hangupcausecodes WHERE code = 237);
INSERT INTO hangupcausecodes (code, description) SELECT 238, '<b>238 - Provider used its daily call time limit</b><br />Provider has daily call limit and call cannot pass over this provider because today too much call time was used over this Provider.<br />Tomorrow daily limit will be reset and calls over this Provider will be possible again (until limit will be reached again)<br />This limitation is only for OUTGOING calls<br />' FROM dual WHERE NOT EXISTS (SELECT * FROM hangupcausecodes WHERE code = 238);
INSERT INTO hangupcausecodes (code, description) SELECT 239, "<b>239 - Device used its daily call time limit</b><br />User has daily call limit and users call cannot pass because today too much call time was used by this User.<br />Tomorrow daily limit will be reset and calls by this User will be possible again.<br />This limitation is only for OUTGOING calls<br />" FROM dual WHERE NOT EXISTS (SELECT * FROM hangupcausecodes WHERE code = 239);
INSERT INTO hangupcausecodes (code, description) SELECT 240, '<b>240 - Provider belongs to the User which makes call</b><br />Provider belongs to the User which makes call.<br />In order to avoid the loop, this Provider will be skipped for such call<br />' FROM dual WHERE NOT EXISTS (SELECT * FROM hangupcausecodes WHERE code = 240);
update hangupcausecodes set description = '<b>216 - Too low balance for reseller for more simultaneous calls</b><br>Increase balance for reseller to allow him and his users to make more calls at the same time.<br> For more information please use Call Tracing or consult online manual at wiki.kolmisoft.com<br>' where code = 216;
INSERT INTO currencies (name, full_name, active) SELECT 'LYD', 'Libyan Dinar', 0 FROM dual WHERE (SELECT COUNT(*) FROM currencies WHERE name = 'LYD') = 0;
update currencies set name='TRY' where full_name='Turkish Lira';
UPDATE devices SET insecure = NULL WHERE id = 2;
INSERT IGNORE INTO conflines(name, value, owner_id) SELECT 'Web_Callback_Send_Source_As_CID', '1', '0' FROM DUAL WHERE (SELECT COUNT(*) FROM conflines WHERE name = 'Web_Callback_Send_Source_As_CID' AND owner_id = 0) = 0;
INSERT INTO emails (name, template, date_created, subject, body) SELECT 'callerid_blocked', 1, NOW(),'Callerid blocked',"At <%= date %> User with ID = <%= user_id %>, with Device ID = <%= device_id %> and CallerID = <%= caller_id %> was blocked because it sent several simultaneous calls in same time." FROM DUAL WHERE (SELECT COUNT(*) FROM emails WHERE name = 'callerid_blocked') = 0;
ALTER TABLE devices MODIFY COLUMN nat ENUM('yes', 'no', 'never', 'route', 'force_rport', 'comedia') DEFAULT 'no';
INSERT INTO hangupcausecodes (code, description) SELECT 241, '<b>241 - Local Caller canceled the call before call was answered</b>' FROM dual WHERE NOT EXISTS (SELECT * FROM hangupcausecodes WHERE code = 241);
INSERT INTO acc_rights (name, nice_name, permission_group, right_type) SELECT 'webphone_acc', 'Manege_Webphone', 'Webphone', 'accountant' FROM dual WHERE (SELECT COUNT(*) FROM acc_rights WHERE name= 'webphone_acc' and right_type='accountant') = 0;
INSERT INTO acc_rights (name, nice_name, permission_group, right_type) SELECT 'webphone_res', 'Webphone', 'Plugins', 'reseller' FROM dual WHERE (SELECT COUNT(*) FROM acc_rights WHERE name= 'webphone_res' and right_type='reseller') = 0;
INSERT IGNORE INTO acc_rights (name, nice_name, permission_group, right_type) VALUES ("autodialer","Autodialer","Plugins","reseller");
INSERT IGNORE INTO acc_rights (name, nice_name, permission_group, right_type) VALUES ("recordings_manage","Manage_Recordings","Device","accountant");
INSERT INTO currencies (name, full_name, active, exchange_rate, curr_update, curr_edit) SELECT 'AMD', 'Armenian Dram', 0,1,0,1 FROM dual WHERE (SELECT COUNT(*) FROM currencies WHERE name = 'AMD') = 0;
UPDATE currencies SET name = 'ZMW' WHERE name = 'ZMK';
UPDATE conflines SET value = 120 WHERE name = 'mor_mapped_db_version';
INSERT IGNORE INTO conflines (name, value) SELECT 'mor_mapped_db_version', '120' FROM dual WHERE NOT EXISTS (SELECT * FROM conflines where name = 'mor_mapped_db_version');
# ^^^^^^ WRITE ABOVE THIS LINE ^^^^^
# marking that DB is updated from script
INSERT INTO conflines (name, value) VALUES ('DB_Update_From_Script', 1);
