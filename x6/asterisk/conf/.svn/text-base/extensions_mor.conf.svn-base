
[mor]

exten => s,1,NoOp(s extension reached!)
; Get number from To
exten => s,2,Set(SEXT=${CUT(CUT(SIP_HEADER(To),@,1),:,2)})
exten => s,3,NoOp(SIP_HEADER TO field: ${SEXT})
exten => s,4,GotoIf($["${SEXT}" = "s"]?6)
exten => s,5,GotoIf($[${LEN(${SEXT})} > 0]?${SEXT},1)
; Get number from Diversion
exten => s,6,Set(SEXT=${CUT(CUT(SIP_HEADER(Diversion),@,1),:,2)})
exten => s,7,NoOp(SIP_HEADER Diversion field: ${SEXT})
exten => s,8,GotoIf($["${SEXT}" = "s"]?14)
exten => s,9,GotoIf($[${LEN(${SEXT})} > 0]?${SEXT},1)
; get number from Brasilian Vono DID provider
exten => s,10,Set(DID_VONO=${SIP_HEADER(X-Vono-DDR)})
exten => s,11,GotoIf($[${LEN(${DID_VONO})} > 9]?${DID_VONO},1)
; get number from Brasilian Azzu DID provider
exten => s,12,Set(DID_AZZU=${SIP_HEADER(X-Azzu-DDR)})
exten => s,13,GotoIf($[${LEN(${DID_AZZU})} > 10]?${DID_AZZU},1)
; Number not found, sorry, bye
exten => s,14,Wait(1)
exten => s,15,Playback(tt-somethingwrong)
exten => s,16,Congestion(10)
exten => s,17,Hangup



exten => _+.,1,Goto(${EXTEN:1},1)

exten => fax, 1, Goto(mor_fax2email,${EXTEN},1)


exten => _X.,1,NoOp(MOR starts)
exten => _X.,2,Gosub(diversion_settings,${EXTEN},1)
exten => _X.,3,Gosub(proxy_settings,${EXTEN},1)
exten => _X.,n,Set(TIMEOUT(response)=20)
exten => _X.,n,Set(TIMEOUT(digit)=10)
exten => _X.,n,mor(${EXTEN})
exten => _X.,n,GotoIf($["${MOR_CARD_USED}" != ""]?mor_callingcard,s,1)
exten => _X.,n,GotoIf($["${MOR_ANIPIN_USED}" != ""]?mor_anipin,s,1)
exten => _X.,n,GotoIf($["${DIALSTATUS}" = "BUSY"]?BUSY,1:HANGUP,1)


exten => BUSY,1,GotoIf($[${LEN(${MOR_CB_BUSY_IVR})} > 0]?2:5)
exten => BUSY,2,Set(MOR_TMP_VAR=${MOR_CB_BUSY_IVR})
exten => BUSY,3,Set(MOR_CB_BUSY_IVR=)
exten => BUSY,4,Goto(ivr_block${MOR_TMP_VAR},s,1)
exten => BUSY,5,Busy(10)
exten => BUSY,6,Hangup

exten => HANGUP,1,GotoIf($[${LEN(${MOR_CB_FAILED_IVR})} > 0]?2:5)
exten => HANGUP,2,Set(MOR_TMP_VAR=${MOR_CB_FAILED_IVR})
exten => HANGUP,3,Set(MOR_CB_FAILED_IVR=)
exten => HANGUP,4,Goto(ivr_block${MOR_TMP_VAR},s,1)
exten => HANGUP,5,Hangup(${MOR_HGC})

exten => FAILED,1,Goto(HANGUP,1)
exten => HANGUP_NOW,1,goto(HANGUP,1)


;Asterisk 1.4.24.1+ support
exten => h,1,Set(MOR_DIALSTATUS=${DIALSTATUS})
exten => h,n,Set(MOR_RDURATION=${CDR(rduration)})
exten => h,n,Set(MOR_RBILLSEC=${CDR(rbillsec)})
exten => h,n,Set(MOR_CLID=${CALLERID(all)})
exten => h,n,Set(MOR_CHANNEL=${CDR(channel)})
exten => h,n,Set(MOR_PDD=${CDR(pddsec)})
exten => h,n,NoOp(HANGUP CAUSE: ${HANGUPCAUSE})


switch => Realtime/mor@extensions
;switch => Realtime/mor@realtime_ext


[diversion_settings]
exten => _X.,1,GotoIf($["${CHANNEL(channeltype)}" = "SIP"]?2:return)
exten => _X.,2,GotoIf($[${LEN(${SIP_HEADER(Diversion)})} > 0]?3:return)
exten => _X.,3,SIPAddHeader(Diversion: ${SIP_HEADER(Diversion)})
exten => _X.,n,Set(MOR_Diversion=${SIP_HEADER(Diversion)})
exten => _X.,n(return),Return()


[proxy_settings]
exten => _X.,1,GotoIf($["${CHANNEL(channeltype)}" = "SIP"]?2:proxy_return)
exten => _X.,2,GotoIf($[${LEN(${SIP_HEADER(x-MOR-Original-CallerIDnum)})} > 0]?3:proxy_return)
exten => _X.,3,Set(MORPROXYCALLERIDnum=${SIP_HEADER(x-MOR-Original-CallerIDnum)})
exten => _X.,n,Set(CALLERID(ANI)=${MORPROXYCALLERIDnum})
exten => _X.,n,Set(CALLERID(num)=${MORPROXYCALLERIDnum})
exten => _X.,n(proxy_return),Return()




include => mor_tests




[mor_local]

exten => _+.,1,Goto(${EXTEN:1},1)

exten => fax, 1, Goto(mor_fax2email,${EXTEN},1)

switch => Realtime/mor_local@extensions
;switch => Realtime/mor_local@realtime_ext



[mor_voicemail]

exten => _[v:0-9].,1,GotoIf($[${LEN(${MOR_LANGUAGE})} > 0]?set_lang:exec_voicemail)
exten => _[v:0-9].,n(set_lang),Set(CHANNEL(language)=${MOR_LANGUAGE})
exten => _[v:0-9].,n(exec_voicemail),VoiceMail(${EXTEN},${MOR_VM})
exten => _[v:0-9].,n,Hangup

exten => s,1,GotoIf($[${LEN(${MOR_LANGUAGE})} > 0]?set_lang:exec_voicemail)
exten => s,n(set_lang),Set(CHANNEL(language)=${MOR_LANGUAGE})
exten => s,n(exec_voicemail),VoiceMail(${EXTEN},${MOR_VM})
exten => s,n,Hangup



[macro-mor_answer]
exten => s,1,AGI(mor_answer_mark)




[mor_main]
exten => _X.,1,Goto(mor,${EXTEN},1)

exten => s,1,Goto(mor,${EXTEN},1)



[please_login]
exten => _X.,1,Goto(mor_local,${EXTEN},1)


;WEB Callback

[mor_cb_src]

exten => _X.,1,NoOp(MOR CB calls src!)
exten => _X.,n,Set(__MOR_API_CB_ID=${MOR_CB_ID})
exten => _X.,n,Set(__MOR_API_CB_SRC=1)
exten => _X.,n,Set(__MOR_CB_LEGA_CID=${MOR_CB_LEGA_CID})
exten => _X.,n,Set(__MOR_CALL_LEG1=1)
exten => _X.,n,Set(__MOR_API_CARD_PIN=${MOR_API_CARD_PIN})
exten => _X.,n,Set(CDR(ACCOUNTCODE)=${MOR_ACC})
exten => _X.,n,Dial(Local/${EXTEN}@mor_local/n)
exten => _X.,n,Hangup



[mor_cb_dst]

exten => _X.,1,NoOp(MOR CB calls dst!)
exten => _X.,n,Set(__MOR_API_CB_ID=${MOR_CB_ID})
exten => _X.,n,Set(__MOR_API_CB=1)
exten => _X.,n,Set(__MOR_API_CB_DST=1)
exten => _X.,n,Set(__MOR_CB_LEGA_DST=${MOR_CB_LEGA_DST})
exten => _X.,n,Set(__MOR_CB_LEGB_CID=${MOR_CB_LEGB_CID})
exten => _X.,n,Set(__MOR_API_CARD_PIN=${MOR_API_CARD_PIN})
exten => _X.,n,Set(__MOR_CALLBACK_START=${MOR_API_CALLBACK_START})
exten => _X.,n,NoOp(Acc: ${CDR(ACCOUNTCODE)})
exten => _X.,n,Wait(1)
exten => _X.,n,Playback(mor/mor_pls_wait_connect_call)
exten => _X.,n,Dial(Local/${EXTEN}@mor_local/n)
exten => _X.,n,Hangup


[mor_cb_dst_ask]

exten => _X.,1,NoOp(MOR CB asks for dst!)
exten => _X.,n,Set(__MOR_API_CB_ID=${MOR_CB_ID})
exten => _X.,n,Set(__MOR_API_CB=1)
exten => _X.,n,Set(__MOR_API_CB_DST=1)
exten => _X.,n,Set(__MOR_CB_LEGA_DST=${MOR_CB_LEGA_DST})
exten => _X.,n,Set(__MOR_CB_LEGB_CID=${MOR_CB_LEGB_CID})
exten => _X.,n,Set(__MOR_API_CARD_PIN=${MOR_API_CARD_PIN})
exten => _X.,n,Set(__MOR_CALLBACK_START=${MOR_API_CALLBACK_START})
exten => _X.,n,NoOp(Acc: ${CDR(ACCOUNTCODE)})
exten => _X.,n,Wait(1)
exten => _X.,n,Read(number,mor/mor_pls_entr_num_uwish2_call)
exten => _X.,n,Wait(1)
exten => _X.,n,Playback(mor/mor_pls_wait_connect_call)
exten => _X.,n,Dial(Local/${number}@mor_local/n)
exten => _X.,n,Hangup


; Spying on channels
[mor_cb_spy]
exten => _.,1,NoOp(Spying on ${EXTEN})
exten => _.,n,Chanspy(${EXTEN},q)
exten => _.,n,Hangup

;Simple Callback


[mor_activate_callback]

exten => _+.,1,Goto(${EXTEN:1},1)

exten => _X.,1,NoOp
exten => _X.,2,Wait(1)  ;change to 6 if no CID is received
exten => _X.,3,AGI(mor_callback)
exten => _X.,4,Hangup(${MOR_HGC})


[mor_fax2email]

exten => _X.,1,Answer
exten => _X.,2,StopPlaytones
exten => _X.,3,Playback(beep)
exten => _X.,4,Set(FAXFILE=${CDR(UNIQUEID)})
exten => _X.,5,ReceiveFax(/var/spool/asterisk/faxes/${FAXFILE}.tif,f)

exten => fax,1,Goto(mor_fax2email,111,1)

exten => h,1,AGI(mor_fax2email)
exten => h,2,Hangup


[mor_direct]

exten => _+.,1,Goto(${EXTEN:1},1)

exten => _[v:0-9].,1,NoOp(mor_direct)

exten => _[v:0-9].,n,Set(TRUNKEXT=${SIP_HEADER(x-MOR-TrunkExtension)})
exten => _[v:0-9].,n,GotoIf($[${LEN(${TRUNKEXT})} > 0]?trunk:calleridcheck)
exten => _[v:0-9].,n(trunk),NoOp(TRUNK Extension: ${TRUNKEXT})
exten => _[v:0-9].,n,Set(MOR_DID=${TRUNKEXT})
exten => _[v:0-9].,n,Goto(normal)

exten => _[v:0-9].,n(calleridcheck),Set(MORCALLERID=${SIP_HEADER(x-MOR-CallerID)})
exten => _[v:0-9].,n,GotoIf($[${LEN(${MORCALLERID})} > 0]?callerid:normal)
exten => _[v:0-9].,n(callerid),NoOp(CallerID from SIP Header: ${MORCALLERID})
exten => _[v:0-9].,n,Set(CALLERID(all)=${MORCALLERID})

exten => _[v:0-9].,n(normal),Goto(mor_local,${EXTEN},1)


[mor_proxy]

exten => _+.,1,Goto(${EXTEN:1},1)

exten => _X.,1,NoOp(SIP Proxy calling)
exten => _X.,n,Set(MORPROXYCALLERIDnum=${SIP_HEADER(x-MOR-Original-CallerIDnum)})
exten => _X.,n,Set(MORPROXYCALLERIDname=${SIP_HEADER(x-MOR-Original-CallerIDname)})
exten => _X.,n,Set(MORPROXYACC=${SIP_HEADER(x-MOR-Original-ACC)})
exten => _X.,n,NoOp(CallerID from SIP Header: ${MORPROXYCALLERIDnum})
exten => _X.,n,NoOp(CallerID from SIP Header: ${MORPROXYCALLERIDname})
exten => _X.,n,NoOp(ACC from SIP Header: ${MORPROXYACC})
exten => _X.,n,Set(CALLERID(all)=${MORPROXYCALLERIDnum})
;exten => _X.,n,Set(CALLERID(name)=${MORPROXYCALLERIDname})
exten => _X.,n,Set(CDR(ACCOUNTCODE)=${MORPROXYACC})
exten => _X.,n,Goto(mor,${EXTEN},1)

[mor_queues]
exten => _.,1,Goto(${EXTEN},s,1)

;include => mor_local


#include extensions_mor_ad.conf
#include extensions_mor_tests.conf
#include extensions_mor_pbxfunctions.conf
#include extensions_mor_ivr.conf
#include extensions_mor_custom.conf
#include extensions_mor_callingcard.conf
#include extensions_mor_stresstest.conf
#include extensions_mor_anipin.conf
#include extensions_mor_h323.conf
#include extensions_mor_didww.conf
#include extensions_mor_queues.conf
#include extensions_mor_didx.conf