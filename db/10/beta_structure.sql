ALTER TABLE users ADD own_providers INT default 0 COMMENT 'should allow provider to have own providers?';
ALTER TABLE devices MODIFY ipaddr varchar(40); 
ALTER TABLE providers ADD user_id INT default 0 COMMENT 'ID of the user who owns provider';
ALTER TABLE providers ADD INDEX user_id_index(user_id);
ALTER TABLE terminators ADD user_id INT default 0 COMMENT 'ID of the user who owns terminator';
ALTER TABLE terminators ADD INDEX user_id_index(user_id);
ALTER TABLE lcrs ADD user_id INT default 0 COMMENT 'ID of the user who owns lcrs';
ALTER TABLE lcrs ADD INDEX user_id_index(user_id);
ALTER TABLE lcr_partials ADD user_id INT default 0 COMMENT 'ID of the user who owns lcr_partials';
ALTER TABLE lcr_partials ADD INDEX user_id_index(user_id);
ALTER TABLE providers ADD common_use INT default 0 COMMENT 'Can be used by resellers?';
ALTER TABLE acc_groups ADD COLUMN group_type VARCHAR(20) NOT NULL DEFAULT 'accountant' COMMENT 'Type of the permission Group';
ALTER TABLE acc_rights ADD COLUMN right_type VARCHAR(20) NOT NULL DEFAULT 'accountant' COMMENT 'Type of the permission Right';
ALTER TABLE users ADD COLUMN ignore_global_monitorings TINYINT(0)  NOT NULL DEFAULT 0 COMMENT 'Should user be affected by global monitoring';
ALTER TABLE acc_groups ADD COLUMN description BLOB COMMENT 'Description on acc_groups';
ALTER TABLE providers ADD INDEX terminator_id_index_index(terminator_id);
ALTER TABLE dids ADD COLUMN t_digit INT NOT NULL DEFAULT 10 COMMENT 'Timeout Digit';
ALTER TABLE dids ADD COLUMN t_response INT NOT NULL DEFAULT 20 COMMENT 'Timeout Response';
ALTER TABLE cardgroups ADD tell_cents boolean default false COMMENT 'should allow cardgroups tell censt?';
ALTER TABLE cardgroups ADD tell_balance_in_currency varchar(5) default "" COMMENT 'cardgroups tell balance in currency?';
ALTER TABLE users ADD INDEX owner_id_index(owner_id);
CREATE TABLE IF NOT EXISTS user_translations ( id int(11) NOT NULL AUTO_INCREMENT, user_id int(11) NOT NULL, translation_id int(11) NOT NULL, position int(11) NOT NULL, active tinyint(4) DEFAULT '1', PRIMARY KEY (id), INDEX user_id_index(user_id), INDEX translation_id_index(translation_id)) ENGINE=InnoDB DEFAULT CHARSET=utf8;
ALTER TABLE locations ADD user_id INT default 0 COMMENT 'ID of the user who owns location';
ALTER TABLE pbxfunctions ADD user_id INT default 0 COMMENT 'ID of the user who owns pbxfunction';
ALTER TABLE dialplans ADD user_id INT default 0 COMMENT 'ID of the user who owns dialplan';
ALTER TABLE users ADD currency_id INT default 1 COMMENT 'User default currency ID';
ALTER TABLE pbxfunctions ADD allow_resellers INT default 1 COMMENT 'Pbxfunction allow use reseller';
CREATE TABLE IF NOT EXISTS `quickforwards_rules` ( `id` int(11) NOT NULL auto_increment, `name` varchar(255) NOT NULL COMMENT 'Rule name', `user_id` INTEGER COMMENT 'Foreign key to users table',`rule_regexp` varchar(255) NOT NULL COMMENT 'Regexp rule to find dids.did', `created_at` datetime NOT NULL, `updated_at` datetime NOT NULL,  PRIMARY KEY  (`id`)) ENGINE=InnoDB DEFAULT CHARSET=utf8;
ALTER TABLE users ADD quickforwards_rule_id INT default 0 COMMENT 'User quickforwards rule ID';
ALTER TABLE voicemail_boxes MODIFY mailbox varchar(50);
ALTER TABLE ivrs ADD user_id INT default 0 COMMENT 'ID of the user who owns ivr';
ALTER TABLE ivr_timeperiods ADD user_id INT default 0 COMMENT 'ID of the user who owns ivr_timeperiods';
ALTER TABLE ivr_voices ADD user_id INT default 0 COMMENT 'ID of the user who owns ivr_voices';
ALTER TABLE ivr_sound_files ADD user_id INT default 0 COMMENT 'ID of the user who owns ivr_sound_files';
ALTER TABLE devices ADD language VARCHAR(10) default NULL COMMENT 'Language of device';
ALTER TABLE cards ADD language VARCHAR(10) default 'en' COMMENT 'Language of card';
ALTER TABLE payments ADD description BLOB COMMENT 'payment description';
ALTER TABLE campaigns ADD owner_id INT default 0 COMMENT 'Owner id of compaings';
ALTER TABLE adnumbers ADD user_id INT default 0 COMMENT 'Owner id of adnumbers';
CREATE TABLE IF NOT EXISTS cron_settings (`id` int(11) NOT NULL auto_increment, `action` varchar(255) NOT NULL COMMENT '', `user_id` INTEGER NOT NULL COMMENT 'owner of setting', `name` varchar(255) NOT NULL COMMENT 'Name of setting', `description` BLOB COMMENT 'Setting comment', `target_id` INTEGER NOT NULL COMMENT 'object ID, -1 all in class', `target_class` varchar(255) NOT NULL COMMENT 'Object class', `to_target_id` INTEGER NOT NULL COMMENT 'object ID, -1 all in class', `to_target_class` varchar(255) NOT NULL COMMENT 'Object class', `periodic_type` INTEGER DEFAULT 0 COMMENT 'type of periodic', `to_do_time` TIME, `repeat_forever` INTEGER DEFAULT 0, `priority` INTEGER DEFAULT 0, `to_do_times` INTEGER, `valid_from` datetime, `valid_till` datetime, `created_at` datetime NOT NULL, `updated_at` datetime NOT NULL, PRIMARY KEY (id)) ENGINE=InnoDB DEFAULT CHARSET=utf8;
CREATE TABLE IF NOT EXISTS cron_actions ( `id` int(11) NOT NULL auto_increment, `cron_setting_id` INTEGER NOT NULL COMMENT 'setting ID', `attempts` INTEGER DEFAULT 0 COMMENT 'Provides for retries, but still fail eventually.', `locked_by` varchar(255)  COMMENT 'Who is working on this object (if locked)', `last_error` BLOB COMMENT 'reason for last failure', `handler` varchar(255) COMMENT 'YAML-encoded string of the object that will do work', `run_at` datetime COMMENT 'When to run. Could be Time.now for immediately, or sometime in the future.', `locked_at` datetime COMMENT 'Set when a client is working on this object', `failed_at` datetime COMMENT 'Set when all retries have failed (actually, by default, the record is deleted instead)', `created_at` datetime NOT NULL, `updated_at` datetime NOT NULL, PRIMARY KEY (id)) ENGINE=InnoDB DEFAULT CHARSET=utf8;
ALTER TABLE cs_invoices ADD tax_id int(11) default NULL COMMENT 'Tax for invoice';
ALTER TABLE cs_invoices ADD balance_with_tax float default 0 COMMENT 'Balance with tax for invoice';
ALTER TABLE cards ADD name VARCHAR(255) default '' COMMENT 'Name of card';
CREATE INDEX number_unique ON cards(number);
ALTER TABLE devices MODIFY language VARCHAR(10) DEFAULT NULL;
CREATE INDEX rate_index ON aratedetails(rate_id);
DELETE roles.*  FROM roles WHERE id IN (select * from (SELECT id FROM roles GROUP BY name having count(*) > 1) as tt);
DELETE rights.*  FROM rights WHERE id IN (select * from (SELECT id FROM rights GROUP BY controller, action having count(*) > 1) as tt);
DELETE role_rights.*  FROM role_rights WHERE id IN (select * from (SELECT id FROM role_rights GROUP BY role_id, right_id having count(*) > 1) as tt);
ALTER TABLE directions MODIFY COLUMN code VARCHAR(20) NOT NULL;
ALTER TABLE destinations MODIFY COLUMN prefix VARCHAR(50) NOT NULL;
ALTER TABLE `lcrproviders` ADD INDEX `active_lcr_prov` ( `active` , `lcr_id` , `provider_id` );
ALTER TABLE activecalls ENGINE=MEMORY;
ALTER TABLE `activecalls` ADD INDEX `prov_index` ( `provider_id` );
ALTER TABLE extlines MODIFY COLUMN appdata varchar(255);
ALTER TABLE groups AUTO_INCREMENT = 1;
ALTER TABLE voicemail_boxes ADD UNIQUE (device_id);
ALTER TABLE `adnumbers` ADD `uniqueid` VARCHAR( 30 ) NULL ;
CREATE INDEX uniqueidindex ON recordings (uniqueid(6));
## SQL sentences goes to the top ^^^^^ from this line
# make sure you press ENTER (to end line) after last SQL sentence!
# also whole SQL sentence should go into one line
# ------------ DO NOT WRITE NOTHING PAST THIS LINE ---------------
