#!/bin/sh
# $Id: rc.redhat.asterisk 67061 2007-06-04 17:11:43Z tilghman $
#
# asterisk    Starts, Stops and Reloads Asterisk.
#
# chkconfig: 2345 90 60
# description: Asterisk PBX and telephony daemon.
# processname: asterisk
# pidfile: /var/run/asterisk.pid
#
#
#+++2009-02-02  kolmisoft
# - Modified stop() function to softhangup calls and then stop gracefully
# Thu Nov 17 2005 Gregory Boehnlein <damin@nacs.net>
# - Updated Version to 1.3
# - Reversed behavior of LD_ASSUME_KERNEL=2.4.1
# - Added detailed failure messages
#
# Sun Jul 18 2004 Gregory Boehnlein <damin@nacs.net>
# - Updated Version to 1.2
# - Added test for safe_asterisk
# - Verified SIGTERM issued by "killproc" ensures "stop gracefully"
# - Added support for -U and -G command line options
# - Modified "reload" to call asterisk -rx 'reload' 

# Use this option to specify a different configuration directory
#AST_CONFIG=/etc/asterisk

# Installation directory
AST_SBIN=/usr/sbin

# Uncomment the following and set them to the user/groups that you
# want to run Asterisk as. NOTE: this requires substantial work to
# be sure that Asterisk's environment has permission to write the
# files required  for  its  operation, including logs, its comm
# socket, the asterisk database, etc.
#AST_USER="asterisk"
#AST_GROUP="asterisk"

# Source function library.
. /etc/rc.d/init.d/functions

if ! [ -x $AST_SBIN/asterisk ] ; then
	echo "ERROR: $AST_SBIN/asterisk not found"
	exit 0
fi

if ! [ -d $AST_CONFIG ] ; then
	echo "ERROR: $AST_CONFIG directory not found"
	exit 0
fi

# Uncomment this ONLY if you know what you are doing.
# export LD_ASSUME_KERNEL=2.4.1

# Full path to asterisk binary
DAEMON=$AST_SBIN/asterisk

# Full path to safe_asterisk script
SAFE_ASTERISK=$AST_SBIN/safe_asterisk

# Allow configuration overrides in /etc/sysconfig/asterisk
CONFIG0=`readlink $0`
if [ "$CONFIG0" = "" ]; then
	CONFIGFILE=/etc/sysconfig/`basename $0`
else
	CONFIGFILE=/etc/sysconfig/`basename $CONFIG0`
fi
[ -x $CONFIGFILE ] && . $CONFIGFILE

RETVAL=0

start() {
	# Start daemons.
	echo -n $"Starting asterisk: "

	ulimit -c unlimited
	ulimit -d unlimited
	ulimit -f unlimited
	ulimit -i unlimited
	ulimit -n 999999
	ulimit -q unlimited

	ulimit -u unlimited
	ulimit -v unlimited
	ulimit -x unlimited
	ulimit -s 244
	ulimit -l unlimited 

        if [ -f $SAFE_ASTERISK ] ; then
		DAEMON=$SAFE_ASTERISK
	fi
	if [ $AST_USER ] ; then
		ASTARGS="-U $AST_USER"
	fi
	if [ $AST_GROUP ] ; then
		ASTARGS="$ASTARGS -G $AST_GROUP"
	fi
	if [ $AST_CONFIG ]; then
		ASTARGS="$ASTARGS -C $AST_CONFIG"
	fi
	daemon $DAEMON $ASTARGS
	RETVAL=$?
	[ $RETVAL -eq 0 ] && touch /var/lock/subsys/asterisk
	echo
	return $RETVAL
}

stop() {
	# Stop daemons.
	echo -n $"Shutting down asterisk: "

#Magic code by kolmisoft begins
rm -rf /tmp/f1
cfc=`asterisk -rx 'core show channels' | grep "0 active channels"`
cfc2=`asterisk -rx 'core show channels' | grep "0 active channels"`

asterisk -rx 'core show channels' | sed '1d' >/tmp/f1
n1=`cat /tmp/f1 | wc -l`
n2=`expr "$n1" - "2"`
cat /tmp/f1 | awk '{split ($0,a," "); print a[1]}' > /tmp/f2
for i in `cat /tmp/f2`; do
asterisk -rx "soft hangup $i " >/dev/null
done

ast_stop_gracefully()
{
	asterisk -vvvvvvrx 'stop gracefully' &> /dev/null
	asterisk -vvvvvvrx 'show channels' | grep "^Unable to connect to remote asterisk*" &> /dev/null
	while [ "$?" != "0" ]; do
		set $(asterisk -vvvvvvrx 'show channels' | grep "active calls")
		if [ $1 != "0" ]; then
			echo "There are $1 active calls, please wait";
			asterisk -vvvvvvrx 'show channels' | grep "^Unable to connect to remote asterisk*" 
&> /dev/null	
			sleep 5
		fi
	done
	
#	echo "No active calls, you are free to do your administrating tasks";	
}	


ast_stop_gracefully
	#killproc asterisk
	RETVAL=$?
	[ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/asterisk
	echo
	return $RETVAL
}

restart() {
	stop
	start
}

reload() {
	$DAEMON -rx 'reload' > /dev/null 2> /dev/null
}

# See how we were called.
case "$1" in
  start)
	start
	;;
  stop)
	stop
	;;
  restart)
	restart
	;;
  reload)
	reload
	;;
  condrestart)
	[ -f /var/lock/subsys/asterisk ] && restart || :
	;;
  status)
	status asterisk
	;;
  *)
	echo "Usage: asterisk {start|stop|restart|reload|condrestart|status}"
	exit 1
esac

exit $?

